{"version":3,"file":"static/js/295.419b17b1.chunk.js","mappings":"iUAIe,SAASA,IACtB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAEC,EAAG,EAAGC,EAAG,IACxDC,GAAaC,EAAAA,EAAAA,QAAO,OAG1BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAmBC,IACvBR,EAAiB,CAAEE,EAAGM,EAAMC,QAASN,EAAGK,EAAME,SAAU,EAK1D,OAFAC,OAAOC,iBAAiB,YAAaL,GAE9B,KACLI,OAAOE,oBAAoB,YAAaN,EAAgB,CACzD,GACA,IAEH,MAAMO,EAAwBC,IAC5B,IAAKA,EAAOC,QAAS,MAAO,CAAC,EAE7B,MAAMC,EAAOF,EAAOC,QAAQE,wBACtBC,EAAaF,EAAKG,KAAOH,EAAKI,MAAQ,EACtCC,EAAaL,EAAKM,IAAMN,EAAKO,OAAS,EAEtCC,EAAQC,KAAKC,MACjB5B,EAAcI,EAAImB,EAClBvB,EAAcG,EAAIiB,GAIdS,EADY,GACOF,KAAKG,IAAIJ,GAC5BK,EAFY,GAEOJ,KAAKK,IAAIN,GAElC,MAAO,CACLO,UAAU,aAADC,OAAeL,EAAI,QAAAK,OAAOH,EAAI,OACxC,EAGH,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OACEC,IAAKlC,EACLmC,GAAG,WACHC,IAAKC,EACLC,IAAI,WACJP,UAAU,qBACVQ,MAAO7B,EAAqBV,MAE9BiC,EAAAA,EAAAA,KAAA,OACEC,IAAKlC,EACLmC,GAAG,WACHC,IAAKC,EACLC,IAAI,YACJP,UAAU,sBACVQ,MAAO7B,EAAqBV,MAE9BiC,EAAAA,EAAAA,KAAA,OAAKG,IAAKI,EAAQF,IAAI,QAAQP,UAAU,iBAG9C,CCxDe,SAASU,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACd,OACEb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACW,EAAAA,EAAO,CAACC,KAAMH,EAAE,oBAEjBT,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uCAAsCC,SAAC,yBAGpDC,EAAAA,EAAAA,KAACa,EAAAA,EAAO,KACRb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAoBI,GAAG,UAASH,UAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAEU,EAAE,oBAChCT,EAAAA,EAAAA,KAACc,EAAAA,EAAW,QAEdd,EAAAA,EAAAA,KAACvC,EAAK,aAMlB,C","sources":["component/singlePageDesign/Panda.js","component/singlePageDesign/SingleContact.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport minion from \"../../images/minion.png\";\r\nimport minionEye from \"../../images/minion-eye.png\";\r\n\r\nexport default function Panda() {\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const leftEyeRef = useRef(null);\r\n  // const rightEyeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (event) => {\r\n      setMousePosition({ x: event.clientX, y: event.clientY });\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  const calculateEyeMovement = (eyeRef) => {\r\n    if (!eyeRef.current) return {};\r\n\r\n    const rect = eyeRef.current.getBoundingClientRect();\r\n    const eyeCenterX = rect.left + rect.width / 2;\r\n    const eyeCenterY = rect.top + rect.height / 2;\r\n\r\n    const angle = Math.atan2(\r\n      mousePosition.y - eyeCenterY,\r\n      mousePosition.x - eyeCenterX\r\n    );\r\n\r\n    const maxRadius = 10; // Max movement radius for the eye in pixels\r\n    const eyeX = maxRadius * Math.cos(angle);\r\n    const eyeY = maxRadius * Math.sin(angle);\r\n\r\n    return {\r\n      transform: `translate(${eyeX}px, ${eyeY}px)`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"panda\">\r\n      <img\r\n        ref={leftEyeRef}\r\n        id=\"left-eye\"\r\n        src={minionEye}\r\n        alt=\"left-eye\"\r\n        className=\"panda-left-eye eye\"\r\n        style={calculateEyeMovement(leftEyeRef)}\r\n      />\r\n      <img\r\n        ref={leftEyeRef}\r\n        id=\"left-eye\"\r\n        src={minionEye}\r\n        alt=\"right-eye\"\r\n        className=\"panda-right-eye eye\"\r\n        style={calculateEyeMovement(leftEyeRef)}\r\n      />\r\n      <img src={minion} alt=\"panda\" className=\"panda-body\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ContactForm from \"../../component/ContactForm\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Heading from \"../Heading\";\r\nimport Divider from \"../Divider\";\r\nimport Panda from \"./Panda\";\r\n\r\nexport default function SingleContact() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"contact\">\r\n      <Heading text={t(\"Let's Connect\")} />\r\n      {/* <Heading text={`<⚙️${t(\"Experience\")} / >`} /> */}\r\n      <p className=\"text-center small-intro colored-text\">\r\n        Let's Keep In Touch\r\n      </p>\r\n      <Divider />\r\n      <div className=\"row contact-inner\" id=\"contact\">\r\n        <div className=\"container\">\r\n          <div className=\"row px-0 position-relative\">\r\n            <div className=\"col-12 col-lg-6 mx-auto form-wrap\">\r\n              <h3 className=\"colored-text\">{t(\"Let's Connect\")}</h3>\r\n              <ContactForm />\r\n            </div>\r\n            <Panda />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Panda","mousePosition","setMousePosition","useState","x","y","leftEyeRef","useRef","useEffect","handleMouseMove","event","clientX","clientY","window","addEventListener","removeEventListener","calculateEyeMovement","eyeRef","current","rect","getBoundingClientRect","eyeCenterX","left","width","eyeCenterY","top","height","angle","Math","atan2","eyeX","cos","eyeY","sin","transform","concat","_jsxs","className","children","_jsx","ref","id","src","minionEye","alt","style","minion","SingleContact","t","useTranslation","Heading","text","Divider","ContactForm"],"sourceRoot":""}